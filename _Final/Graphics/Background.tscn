[gd_scene load_steps=9 format=2]

[ext_resource path="res://Graphics/BG.png" type="Texture" id=1]
[ext_resource path="res://Graphics/Space I guess.png" type="Texture" id=2]
[ext_resource path="res://Graphics/BackGroundParticleStar.tscn" type="PackedScene" id=3]
[ext_resource path="res://Graphics/Vignette.png" type="Texture" id=4]

[sub_resource type="Shader" id=1]
code = "shader_type canvas_item;

// Gonkee's water shader for Godot 3 - full tutorial https://youtu.be/uhMAHpV_cDg
// If you use this shader, I would prefer if you gave credit to me and my channel

uniform vec4 blue_tint : hint_color;

uniform vec2 sprite_scale;
uniform float scale_x = 0.67;

float rand(vec2 coord){
	return fract(sin(dot(coord, vec2(12.9898, 78.233)))* 43758.5453123);
}

float noise(vec2 coord){
	vec2 i = floor(coord);
	vec2 f = fract(coord);

	// 4 corners of a rectangle surrounding our point
	float a = rand(i);
	float b = rand(i + vec2(1.0, 0.0));
	float c = rand(i + vec2(0.0, 1.0));
	float d = rand(i + vec2(1.0, 1.0));

	vec2 cubic = f * f * (3.0 - 2.0 * f);

	return mix(a, b, cubic.x) + (c - a) * cubic.y * (1.0 - cubic.x) + (d - b) * cubic.x * cubic.y;
}

void fragment(){
	
	vec2 noisecoord1 = UV * sprite_scale * scale_x;
	vec2 noisecoord2 = UV * sprite_scale * scale_x + 4.0;
	
	vec2 motion1 = vec2(TIME * 0.3, TIME * -0.4);
	vec2 motion2 = vec2(TIME * 0.1, TIME * 0.5);
	
	vec2 distort1 = vec2(noise(noisecoord1 + motion1), noise(noisecoord2 + motion1)) - vec2(0.5);
	vec2 distort2 = vec2(noise(noisecoord1 + motion2), noise(noisecoord2 + motion2)) - vec2(0.5);
	
	vec2 distort_sum = (distort1 + distort2) / 60.0;
	
	vec4 color = textureLod(SCREEN_TEXTURE, SCREEN_UV + distort_sum, 0.0);
	
	color = mix(color, blue_tint, 0.3);
	color.rgb = mix(vec3(0.5), color.rgb, 1.4);
	
	float near_top = (UV.y + distort_sum.y) / (0.2 / sprite_scale.y);
	near_top = clamp(near_top, 0.0, 1.0);
	near_top = 1.0 - near_top;
	
	color = mix(color, vec4(1.0), near_top);
	
	float edge_lower = 0.6;
	float edge_upper = edge_lower + 0.1;
	
	if(near_top > edge_lower){
		color.a = 0.0;
		
		if(near_top < edge_upper){
			color.a = (edge_upper - near_top) / (edge_upper - edge_lower);
		}
	}
	
	COLOR = color;
}"

[sub_resource type="ShaderMaterial" id=2]
shader = SubResource( 1 )
shader_param/blue_tint = Color( 0.45098, 0.384314, 0.694118, 0 )
shader_param/sprite_scale = Vector2( 10, 10 )
shader_param/scale_x = 0.67

[sub_resource type="Animation" id=3]
resource_name = "Background"
tracks/0/type = "value"
tracks/0/path = NodePath("TextureProgress:value")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 1 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ 0.0, 100.0 ]
}

[sub_resource type="Animation" id=4]
resource_name = "Blue_Particles"

[node name="CanvasLayer" type="CanvasLayer"]
layer = -1

[node name="TextureProgress" type="TextureProgress" parent="."]
margin_left = -16.0
margin_top = -23.0
margin_right = 2084.0
margin_bottom = 1477.0
rect_scale = Vector2( 0.7, 0.6 )
value = 100.0
texture_under = ExtResource( 1 )
texture_progress = ExtResource( 2 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Shader" type="Sprite" parent="TextureProgress"]
material = SubResource( 2 )
position = Vector2( 1046.39, 731.344 )
scale = Vector2( 1.03125, 1.00657 )
texture = ExtResource( 1 )

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
anims/Background = SubResource( 3 )
anims/Blue_Particles = SubResource( 4 )

[node name="Particles" parent="." instance=ExtResource( 3 )]
editor/display_folded = true

[node name="BackGround1" parent="Particles" index="3"]
position = Vector2( 562.059, 253.388 )

[node name="BackGround2" parent="Particles" index="4"]
position = Vector2( 547.565, 273.665 )

[node name="Vignette" type="Sprite" parent="."]
modulate = Color( 1, 1, 1, 0 )
position = Vector2( 507.912, 292.759 )
scale = Vector2( 0.491692, 0.430695 )
texture = ExtResource( 4 )

[editable path="Particles"]
